/**
 * @param {number[]} nums
 * @param {number} target
 * @return {number}
 */
var findTargetSumWays = function(nums, target) {
 const cache = new Map();
 
 return backtrack(0,0);
 
 // ***********************
 
 function backtrack(i, total) {
     
     if (i === nums.length) {
         return (total === target)? 1 : 0;
     }
     
     const key = `${i},${total}`;
     
     if (cache.has(key)) return cache.get(key);
     
     let left = backtrack(i + 1, total + nums[i]);
     let right = backtrack(i + 1, total - nums[i]);
     
     cache.set(key, left + right);
     
     return  cache.get(key);
 }
 
};


//                   
//                                                       _________________________________________________  0                     0
//                                                      /
//                          ______________________-1[-1]___________________________                                               1
//                         /                                                       \
//              ________1[0]__________                                ____________-1[-2]______________                            2
//             /                      \                              /                                \
//           1[1]                    -1[-1]                    ___1[-1]__                         ___-1[-3]____                   3
//         /      \                 /      \                  /          \                       /             \
//      1[2]     -1[0]          1[0]        -1[-2]         1[0]           -1[-2]             1[-2]            -1[-4]              4
//     /  \       /  \         /    \       /     \       /    \           /    \           /      \           /   \
// 1[3] -1[1]  1[1] -1[-1]  1[1]   -1[-1] 1[-1]  -1[-3]  1[1] -1[-1]    1[-1]  -1[-3]    1[-1]  -1[-3]    1[-3]  -1[-5]           5


//        0 ________________________________________                                                                              0
//                                                  \
//                          ______________________1[1]___________________________                                                 1
//                         /                                                     \
//              ________1[2]__________                                __________-1[0]___________                                  2
//             /                      \                              /                          \
//           1[3]                    -1[1]                     ___1[1]__                        -1[-1]                            3
//         /      \                 /      \                  /         \                    /           \
//      1[4]     -1[2]          1[2]       -1[0]          1[2]         -1[0]               1[0]         -1[-2]                    4
//     /  \       /  \         /    \      /     \       /    \        /    \            /    \          /   \
// 1[5]  -1[3]  1[3] -1[1]  1[3]   -1[1] 1[1]  -1[-1]  1[3] -1[1]    1[1]  -1[-1]    1[1]   -1[-1]    1[-1]  -1[-3]               5


//
// dp cache: {(level, sum): # of ways} = {
//     (3,2): 1
//     (3,0): 0
//     (3,-2):0
//     (3,-4):0
//     (3,4): 1
//     (2,1): 1
//     (2,-1):0
//     (2,-3):0
//     (2,3): 2
//     (1,0): 1
//     (1,-2):0
//     (1,2): 3
//     (0,-1):1
//     (0,1) :4
 
// }